{"version":3,"sources":["assets/hand.png","components/startButton.js","components/start.js","components/score.js","components/option.js","components/question.js","components/finish.js","App.js","index.js"],"names":["StartButton","className","href","onClick","props","updateState","this","text","React","Component","Start","src","hand","alt","Score","score","classList","i","length","curQuestion","reverse","popupClass","closePopup","width","height","viewBox","fill","xmlns","d","map","index","Option","class","disabled","disableOptions","handleAnswer","answer","String","fromCharCode","Question","question","questions","correct","find","answ","newClassList","state","concat","setState","chosenAnsw","push","window","setTimeout","oldClassList","answers","findIndex","el","console","log","curIdx","openPopup","answersFromProps","questionObject","slice","sort","Math","random","Finish","curWin","App","handleChangeState","next","component","handleStartQuiz","prev","isLoaded","error","win","message","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8bb8353.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/hand.db4d6f4e.png\";","import React from \"react\";\nexport default class StartButton extends React.Component {\n    render(){\n        return (\n            <button className=\"button game-edge__button\" href=\"#\"\n               onClick={() => {this.props.updateState(\"question\")}}\n            >\n                {this.props.text}\n            </button>\n        )\n    }\n}","import React from 'react';\nimport hand from '../assets/hand.png'\nimport StartButton from \"./startButton\";\n\nconst Start = (props) => {\n    return(\n        <div className=\"game-edge\">\n            <div className=\"background game-edge__start-background\"> </div>\n            <div className=\"game-edge__container\">\n                <img className=\"game-edge__image\" src={hand} alt=\"Image\"></img>\n                <div className=\"game-edge__content\">\n                    <div className=\"subtitle\">\n                        Total score:\n                    </div>\n                    <div className=\"title game-edge__title\">\n                        Who wants to be<br /> a millionaire?\n                    </div>\n                    <StartButton\n                        text={\"Start\"}\n                        updateState={props.updateState}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Start;","import React from \"react\";\n\nexport default class Score extends React.Component{\n    render() {\n        const score = this.props.score;\n        const  classList = [];\n        for (let i = 0; i < this.props.score.length; i++){\n            if (i < this.props.curQuestion){\n                classList[i] = \"win--gained\";\n            }else if(i === this.props.curQuestion){\n                classList[i] = \"win--current\";\n            }else{\n                classList[i] = \"win--toGain\";\n            }\n        }\n        classList.reverse();\n        return(\n            <div className={\"game__success\" + this.props.popupClass}>\n                <a onClick={this.props.closePopup()} className=\"game__success-slideOut\" href=\"#\">\n                    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path\n                            d=\"M18.364 7.05025C18.7545 6.65972 18.7545 6.02656 18.364 5.63603C17.9734 5.24551 17.3403 5.24551 16.9497 5.63603L12 10.5858L7.05026 5.63606C6.65974 5.24554 6.02657 5.24554 5.63605 5.63606C5.24553 6.02659 5.24553 6.65975 5.63605 7.05028L10.5858 12L5.63603 16.9497C5.24551 17.3403 5.24551 17.9734 5.63603 18.364C6.02656 18.7545 6.65972 18.7545 7.05025 18.364L12 13.4142L16.9498 18.364C17.3403 18.7545 17.9734 18.7545 18.364 18.364C18.7545 17.9735 18.7545 17.3403 18.364 16.9498L13.4142 12L18.364 7.05025Z\"\n                            fill=\"#1C1C21\"/>\n                    </svg>\n                </a>\n                <div className=\"game__success-container\">\n                    {\n                        score.map((score, index) => {\n                            return (\n                                <div key={index} className={\"win \" + classList[index]}>\n                                    <div className=\"win__button\">\n                                        <span className=\"win__button-first\"></span>\n                                        <span className=\"win__button-inside\">{score}</span>\n                                        <span className=\"win__button-last\"></span>\n                                    </div>\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\n\nconst Option = (props) => {\n    return(\n        <div className={\"option \" + props.class}>\n            <button\n                disabled={props.disableOptions}\n                onClick={() => {props.handleAnswer(props.answer, props.index)}}\n                className=\"option__button\">\n                <span className=\"option__button-first\"></span>\n                <span className=\"option__button-variant\">{String.fromCharCode(65 + props.index)}</span>\n                {props.answer}\n                <span className=\"option__button-last\"></span>\n            </button>\n        </div>\n    )\n}\n\nexport default Option;","import React from 'react';\nimport Score from './score';\nimport Option from './option';\n\nclass Question extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            classList: [],\n            answers: [],\n            answersFromProps: [],\n            disableOptions: false,\n            chosenAnsw: [],\n            popupClass: \"\"\n        }\n    }\n\n    handleAnswer = (answer, index) => {\n        const question = this.props.questions[this.props.curQuestion];\n        if (answer === question.correct.find(answ => answ === answer)){\n            const newClassList = this.state.classList.concat();\n            newClassList[index] = newClassList[index] + \" option--correct\";\n            this.setState(state => {\n                return {\n                    classList: newClassList,\n                }\n            })\n\n            this.state.chosenAnsw.push(answer);\n\n            if (this.state.chosenAnsw.length === question.correct.length){\n                this.state.disableOptions = true;\n                    window.setTimeout(() => {\n                    this.props.handleAnswer(true);\n                    this.state.chosenAnsw = [];\n                    this.setState(state => {\n                        return {\n                            classList: [],\n                            disableOptions: false\n                        }\n                    })\n                }, 2000);\n            }\n        }else{\n            const oldClassList = this.state.classList.concat();\n            const newClassList = this.state.classList.concat();\n            const correctAnswIdx = this.state.answers.findIndex(el => el === question.answers[question.correct]);\n\n            newClassList[index] = newClassList[index] + \" option--wrong\";\n            for (let i = 0; i < question.correct.length; i++){\n                console.log(question.correct[i]);\n                const curIdx = this.state.answers.findIndex(el => el === question.correct[i]);\n                newClassList[curIdx] = \" option--correct\";\n            }\n            this.setState(state => {\n                return {\n                    classList: newClassList,\n                    disableOptions: true\n                }\n            })\n            window.setTimeout(() => {\n                this.props.handleAnswer(false);\n                this.state.chosenAnsw = [];\n                this.setState(state => {\n                    return {\n                        classList: oldClassList,\n                        disableOptions: false\n                    }\n                })\n            }, 2000);\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.answersFromProps !== props.questions[props.curQuestion].answers){\n            const questionObject = {...props.questions[props.curQuestion]};\n            const answers = questionObject.answers.slice().sort(() => {\n                return Math.random() - 0.5;\n            });\n            return {\n                answers: answers,\n                answersFromProps: questionObject.answers\n            }\n        }\n        return null;\n    }\n\n    closePopup = () => {\n        this.setState({\n            popupClass: \"\"\n        })\n    }\n    openPopup = () => {\n        this.setState({\n            popupClass: \" game__success--active\"\n        })\n    }\n\n\n    render(){\n        return(\n            <div className=\"game\">\n                <div className=\"game__background\"></div>\n                <div className=\"game__field\">\n                    <a onClick={() => this.openPopup()} className=\"game__field-mobileMenu\" href=\"#\">\n                        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path\n                                d=\"M4 6C4 5.44772 4.44772 5 5 5H19C19.5523 5 20 5.44772 20 6C20 6.55228 19.5523 7 19 7H5C4.44772 7 4 6.55228 4 6Z\"\n                                fill=\"#1C1C21\"/>\n                            <path\n                                d=\"M4 12C4 11.4477 4.44772 11 5 11H19C19.5523 11 20 11.4477 20 12C20 12.5523 19.5523 13 19 13H5C4.44772 13 4 12.5523 4 12Z\"\n                                fill=\"#1C1C21\"/>\n                            <path\n                                d=\"M5 17C4.44772 17 4 17.4477 4 18C4 18.5523 4.44772 19 5 19H19C19.5523 19 20 18.5523 20 18C20 17.4477 19.5523 17 19 17H5Z\"\n                                fill=\"#1C1C21\"/>\n                        </svg>\n                    </a>\n\n                    <div className=\"game__field-title\">\n                        {this.props.questions[this.props.curQuestion].question}\n                    </div>\n                    <div className=\"game__field-variants\">\n                        {\n                            this.state.answers.map((answer, index) => {\n                                return (\n                                    <Option\n                                        key={index}\n                                        index={index}\n                                        handleAnswer={this.handleAnswer}\n                                        answer={answer}\n                                        class={this.state.classList[index]}\n                                        disableOptions={this.state.disableOptions}\n                                    />\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n                <Score\n                    score={this.props.score}\n                    curQuestion={this.props.curQuestion}\n                    popupClass={this.state.popupClass}\n                    closePopup={() => this.closePopup}\n                />\n            </div>\n        )\n    }\n}\n\nexport default Question;","import React from 'react';\nimport hand from '../assets/hand.png'\nimport StartButton from \"./startButton\";\n\nconst Finish = (props) => {\n    return(\n        <div className=\"game-edge\">\n            <div className=\"background game-edge__end-background\"></div>\n            <div className=\"game-edge__container\">\n                <img className=\"game-edge__image\" src={hand} alt=\"Image\"></img>\n                <div className=\"game-edge__content game-edge__end-content\">\n                    <div className=\"subtitle game-edge__end-subtitle\">\n                        Total score:\n                    </div>\n                    <div className=\"title game-edge__title\">\n                        {props.curWin} earned\n                    </div>\n                    <StartButton\n                        text={\"Try again\"}\n                        updateState={props.updateState}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Finish;","import './App.css';\nimport React from 'react';\n\nimport Start from './components/start';\nimport Question from './components/question';\nimport Finish from './components/finish';\n\nclass App extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            component: \"start\",\n            isLoaded: true,\n            error: null,\n            curQuestion: 0,\n\n            win: [\n                '$1,000,000',\n                '$500,000',\n                '$250,000',\n                '$125,000',\n                '$64,000',\n                '$32,000',\n                '$16,000',\n                '$8,000',\n                '$4,000',\n                '$2,000',\n                '$1,000',\n                '$500'\n            ],\n            // win: [\n            //     '$500',\n            //     '$1,000',\n            //     '$2,000',\n            //     '$4,000',\n            //     '$8,000',\n            //     '$16,000',\n            //     '$32,000',\n            //     '$64,000',\n            //     '$125,000',\n            //     '$250,000',\n            //     '$500,000',\n            //     '$1,000,000',\n            // ],\n            questions: [\n                {\n                    question: \"2 and 5\",\n                    answers: [\"2\", \"5\", \"7\", \"1.2\"],\n                    correct: [\"2\", \"5\"]\n                },\n                {\n                    question: \"3+8\",\n                    answers: [\"5\", \"3\", \"7\", \"11\"],\n                    correct: [\"11\"]\n                },\n                {\n                    question: \"5+1\",\n                    answers: [\"6\", \"5\", \"7\", \"1.2\"],\n                    correct: [\"6\"]\n                },\n                {\n                    question: \"4+1\",\n                    answers: [\"5\", \"8\", \"7\", \"1.2\"],\n                    correct: [\"5\"]\n                },\n                {\n                    question: \"22+1\",\n                    answers: [\"23\", \"5\", \"7\", \"1.2\"],\n                    correct: [\"23\"]\n                }\n            ],\n        };\n    }\n\n\n    handleChangeState = (next) => {\n        this.setState({\n            component: next\n        });\n    }\n\n    handleStartQuiz = () => {\n        this.setState({\n            component: \"question\",\n            curQuestion: 0\n        });\n    }\n\n    handleAnswer = (state) => {\n        if (state){\n            if (this.state.curQuestion < this.state.questions.length-1){\n                this.setState(prev => ({\n                    curQuestion: prev.curQuestion + 1\n                }))\n            }else{\n                console.log(0)\n                this.setState({\n                    component: 'finish'\n                })\n            }\n        }else{\n            this.setState({\n                component: 'finish'\n            })\n        }\n    }\n\n\n    // HOW I'D MANAGE JSON\n\n    // componentDidMount() {\n    //     fetch(\"https://some.json\")\n    //         .then(res => res.json())\n    //         .then(\n    //             (result) => {\n    //                 this.setState({\n    //                         isLoaded: true,\n    //                         questions: result.questions,\n    //                         win: result.prices\n    //                     }\n    //                 );\n    //             },\n    //             (error) => {\n    //                 this.setState({\n    //                     isLoaded: true,\n    //                     error: error\n    //                 });\n    //             }\n    //         )\n    // }\n\n    render() {\n        const curWin = this.state.win[(this.state.win.length - 1) - this.state.curQuestion];\n        const component = this.state.component;\n        const error = this.state.error, isLoaded = this.state.isLoaded, questions = this.state.questions;\n        if(error){\n            return (<p>Error: {error.message}</p>)\n        }else if(!isLoaded){\n            return (<p>Loading...</p>)\n        }else{\n            if (component === \"start\"){\n                return (\n                    <div className=\"wrapper\">\n                        <Start\n                            updateState={this.handleStartQuiz}\n                        />\n                    </div>\n\n                );\n            }else if(component === \"question\"){\n                return (\n                    <div className=\"wrapper\">\n                        <Question\n                            handleAnswer={this.handleAnswer}\n                            questions={this.state.questions}\n                            curQuestion={this.state.curQuestion}\n                            score={this.state.win}\n                        />\n                    </div>\n                );\n            }else{\n                return (\n                    <div className=\"wrapper\">\n                        <Finish\n                            updateState={this.handleStartQuiz}\n                            curWin={curWin}\n                        />\n                    </div>\n                );\n            }\n        }\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}