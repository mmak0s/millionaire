[{"/Users/admin/testTasks/headway/src/App.js":"1","/Users/admin/testTasks/headway/src/components/finish.js":"2","/Users/admin/testTasks/headway/src/components/start.js":"3","/Users/admin/testTasks/headway/src/components/question.js":"4","/Users/admin/testTasks/headway/src/components/score.js":"5","/Users/admin/testTasks/headway/src/components/startButton.js":"6","/Users/admin/testTasks/headway/src/components/option.js":"7","/Users/admin/testTasks/headway/src/index.js":"8"},{"size":4985,"mtime":1606938314601,"results":"9","hashOfConfig":"10"},{"size":975,"mtime":1606857344138,"results":"11","hashOfConfig":"10"},{"size":940,"mtime":1606857264343,"results":"12","hashOfConfig":"10"},{"size":5769,"mtime":1606936782113,"results":"13","hashOfConfig":"10"},{"size":2293,"mtime":1606936970706,"results":"14","hashOfConfig":"10"},{"size":338,"mtime":1606844751168,"results":"15","hashOfConfig":"10"},{"size":638,"mtime":1606855045339,"results":"16","hashOfConfig":"10"},{"size":198,"mtime":1606857194586,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"63ng17",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"/Users/admin/testTasks/headway/src/App.js",["41"],"/Users/admin/testTasks/headway/src/components/finish.js",["42"],"import React from 'react';\nimport hand from '../assets/hand.png'\nimport StartButton from \"./startButton\";\n\nconst Finish = (props) => {\n    return(\n        <div className=\"game-edge\">\n            <div className=\"background game-edge__end-background\"></div>\n            <div className=\"game-edge__container\">\n                <img className=\"game-edge__image\" src={hand} alt=\"Image\"></img>\n                <div className=\"game-edge__content game-edge__end-content\">\n                    <div className=\"subtitle game-edge__end-subtitle\">\n                        Total score:\n                    </div>\n                    <div className=\"title game-edge__title\">\n                        {props.curWin} earned\n                    </div>\n                    <StartButton\n                        text={\"Try again\"}\n                        updateState={props.updateState}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Finish;",["43","44"],"/Users/admin/testTasks/headway/src/components/start.js",["45"],"import React from 'react';\nimport hand from '../assets/hand.png'\nimport StartButton from \"./startButton\";\n\nconst Start = (props) => {\n    return(\n        <div className=\"game-edge\">\n            <div className=\"background game-edge__start-background\"> </div>\n            <div className=\"game-edge__container\">\n                <img className=\"game-edge__image\" src={hand} alt=\"Image\"></img>\n                <div className=\"game-edge__content\">\n                    <div className=\"subtitle\">\n                        Total score:\n                    </div>\n                    <div className=\"title game-edge__title\">\n                        Who wants to be<br /> a millionaire?\n                    </div>\n                    <StartButton\n                        text={\"Start\"}\n                        updateState={props.updateState}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Start;",["46","47"],"/Users/admin/testTasks/headway/src/components/question.js",["48","49","50","51","52"],"import React from 'react';\nimport Score from './score';\nimport Option from './option';\n\nclass Question extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            classList: [],\n            answers: [],\n            answersFromProps: [],\n            disableOptions: false,\n            chosenAnsw: [],\n            popupClass: \"\"\n        }\n    }\n\n    handleAnswer = (answer, index) => {\n        const question = this.props.questions[this.props.curQuestion];\n        if (answer === question.correct.find(answ => answ === answer)){\n            const newClassList = this.state.classList.concat();\n            newClassList[index] = newClassList[index] + \" option--correct\";\n            this.setState(state => {\n                return {\n                    classList: newClassList,\n                }\n            })\n\n            this.state.chosenAnsw.push(answer);\n\n            if (this.state.chosenAnsw.length === question.correct.length){\n                this.state.disableOptions = true;\n                    window.setTimeout(() => {\n                    this.props.handleAnswer(true);\n                    this.state.chosenAnsw = [];\n                    this.setState(state => {\n                        return {\n                            classList: [],\n                            disableOptions: false\n                        }\n                    })\n                }, 2000);\n            }\n        }else{\n            const oldClassList = this.state.classList.concat();\n            const newClassList = this.state.classList.concat();\n            const correctAnswIdx = this.state.answers.findIndex(el => el === question.answers[question.correct]);\n\n            newClassList[index] = newClassList[index] + \" option--wrong\";\n            for (let i = 0; i < question.correct.length; i++){\n                console.log(question.correct[i]);\n                const curIdx = this.state.answers.findIndex(el => el === question.correct[i]);\n                newClassList[curIdx] = \" option--correct\";\n            }\n            this.setState(state => {\n                return {\n                    classList: newClassList,\n                    disableOptions: true\n                }\n            })\n            window.setTimeout(() => {\n                this.props.handleAnswer(false);\n                this.state.chosenAnsw = [];\n                this.setState(state => {\n                    return {\n                        classList: oldClassList,\n                        disableOptions: false\n                    }\n                })\n            }, 2000);\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.answersFromProps !== props.questions[props.curQuestion].answers){\n            const questionObject = {...props.questions[props.curQuestion]};\n            const answers = questionObject.answers.slice().sort(() => {\n                return Math.random() - 0.5;\n            });\n            return {\n                answers: answers,\n                answersFromProps: questionObject.answers\n            }\n        }\n        return null;\n    }\n\n    closePopup = () => {\n        this.setState({\n            popupClass: \"\"\n        })\n    }\n    openPopup = () => {\n        this.setState({\n            popupClass: \" game__success--active\"\n        })\n    }\n\n\n    render(){\n        return(\n            <div className=\"game\">\n                <div className=\"game__background\"></div>\n                <div className=\"game__field\">\n                    <a onClick={() => this.openPopup()} className=\"game__field-mobileMenu\" href=\"#\">\n                        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path\n                                d=\"M4 6C4 5.44772 4.44772 5 5 5H19C19.5523 5 20 5.44772 20 6C20 6.55228 19.5523 7 19 7H5C4.44772 7 4 6.55228 4 6Z\"\n                                fill=\"#1C1C21\"/>\n                            <path\n                                d=\"M4 12C4 11.4477 4.44772 11 5 11H19C19.5523 11 20 11.4477 20 12C20 12.5523 19.5523 13 19 13H5C4.44772 13 4 12.5523 4 12Z\"\n                                fill=\"#1C1C21\"/>\n                            <path\n                                d=\"M5 17C4.44772 17 4 17.4477 4 18C4 18.5523 4.44772 19 5 19H19C19.5523 19 20 18.5523 20 18C20 17.4477 19.5523 17 19 17H5Z\"\n                                fill=\"#1C1C21\"/>\n                        </svg>\n                    </a>\n\n                    <div className=\"game__field-title\">\n                        {this.props.questions[this.props.curQuestion].question}\n                    </div>\n                    <div className=\"game__field-variants\">\n                        {\n                            this.state.answers.map((answer, index) => {\n                                return (\n                                    <Option\n                                        key={index}\n                                        index={index}\n                                        handleAnswer={this.handleAnswer}\n                                        answer={answer}\n                                        class={this.state.classList[index]}\n                                        disableOptions={this.state.disableOptions}\n                                    />\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n                <Score\n                    score={this.props.score}\n                    curQuestion={this.props.curQuestion}\n                    popupClass={this.state.popupClass}\n                    closePopup={() => this.closePopup}\n                />\n            </div>\n        )\n    }\n}\n\nexport default Question;",["53","54"],"/Users/admin/testTasks/headway/src/components/score.js",["55"],"import React from \"react\";\n\nexport default class Score extends React.Component{\n    render() {\n        const score = this.props.score;\n        const  classList = [];\n        for (let i = 0; i < this.props.score.length; i++){\n            if (i < this.props.curQuestion){\n                classList[i] = \"win--gained\";\n            }else if(i === this.props.curQuestion){\n                classList[i] = \"win--current\";\n            }else{\n                classList[i] = \"win--toGain\";\n            }\n        }\n        classList.reverse();\n        return(\n            <div className={\"game__success\" + this.props.popupClass}>\n                <a onClick={this.props.closePopup()} className=\"game__success-slideOut\" href=\"#\">\n                    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path\n                            d=\"M18.364 7.05025C18.7545 6.65972 18.7545 6.02656 18.364 5.63603C17.9734 5.24551 17.3403 5.24551 16.9497 5.63603L12 10.5858L7.05026 5.63606C6.65974 5.24554 6.02657 5.24554 5.63605 5.63606C5.24553 6.02659 5.24553 6.65975 5.63605 7.05028L10.5858 12L5.63603 16.9497C5.24551 17.3403 5.24551 17.9734 5.63603 18.364C6.02656 18.7545 6.65972 18.7545 7.05025 18.364L12 13.4142L16.9498 18.364C17.3403 18.7545 17.9734 18.7545 18.364 18.364C18.7545 17.9735 18.7545 17.3403 18.364 16.9498L13.4142 12L18.364 7.05025Z\"\n                            fill=\"#1C1C21\"/>\n                    </svg>\n                </a>\n                <div className=\"game__success-container\">\n                    {\n                        score.map((score, index) => {\n                            return (\n                                <div key={index} className={\"win \" + classList[index]}>\n                                    <div className=\"win__button\">\n                                        <span className=\"win__button-first\"></span>\n                                        <span className=\"win__button-inside\">{score}</span>\n                                        <span className=\"win__button-last\"></span>\n                                    </div>\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}","/Users/admin/testTasks/headway/src/components/startButton.js",[],"/Users/admin/testTasks/headway/src/components/option.js",[],"/Users/admin/testTasks/headway/src/index.js",[],{"ruleId":"56","severity":1,"message":"57","line":135,"column":73,"nodeType":"58","messageId":"59","endLine":135,"endColumn":82},{"ruleId":"60","severity":1,"message":"61","line":10,"column":17,"nodeType":"62","endLine":10,"endColumn":74},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"60","severity":1,"message":"61","line":10,"column":17,"nodeType":"62","endLine":10,"endColumn":74},{"ruleId":"63","replacedBy":"67"},{"ruleId":"65","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":32,"column":17,"nodeType":"71","endLine":32,"endColumn":27},{"ruleId":"69","severity":1,"message":"70","line":35,"column":21,"nodeType":"71","endLine":35,"endColumn":31},{"ruleId":"56","severity":1,"message":"72","line":47,"column":19,"nodeType":"58","messageId":"59","endLine":47,"endColumn":33},{"ruleId":"69","severity":1,"message":"70","line":63,"column":17,"nodeType":"71","endLine":63,"endColumn":27},{"ruleId":"73","severity":1,"message":"74","line":105,"column":21,"nodeType":"62","endLine":105,"endColumn":101},{"ruleId":"63","replacedBy":"75"},{"ruleId":"65","replacedBy":"76"},{"ruleId":"73","severity":1,"message":"74","line":19,"column":17,"nodeType":"62","endLine":19,"endColumn":98},"no-unused-vars","'questions' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-native-reassign",["77"],"no-negated-in-lhs",["78"],["77"],["78"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'correctAnswIdx' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["77"],["78"],"no-global-assign","no-unsafe-negation"]